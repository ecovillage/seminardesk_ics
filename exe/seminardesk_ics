#!/usr/bin/env ruby

require "seminardesk_ics"

require 'optparse'

url,file = nil

option_parser = OptionParser.new do |opts|
  opts.banner = <<~USAGE
    Usage: #{$PROGRAM_NAME} [options]

    Fetch data from seminardesk api and output a RFC 5455 compliant ics file.

  USAGE

  opts.on("-u", "--url URL", "Seminardesk API endpoint") do |u|
    url = u
  end

  opts.on("-f", "--file FILE", "ICS file to save ('-' for STDOUT)") do |f|
    file = f
  end

  opts.separator "Common options"
  opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
    options[:verbose] = v
  end
  opts.on_tail("-h", "--help", "Show this message and exit") do
    puts opts
    exit
  end
  opts.on_tail("--version", "Show version and exit") do
    puts SeminardeskICS::VERSION
    exit
  end
end

# Process options
option_parser.parse!

if url && ARGV.length > 0
  STDERR.puts "Provide either url as option or as argument"
  puts option_parser
  exit 1
end

if (url ||= ARGV.fetch(0, nil)).to_s == ''
  STDERR.puts "Need to provide url option"
  puts option_parser
  exit 1
end

if file.to_s != ''
  if File.exist?(file)
    STDERR.puts "Output file #{file} exists already, aborting."
    exit 2
  end
end

out_stream = (file.to_s != '' && file.to_s != '-') ? File.open(file, 'w') : STDOUT

json = SeminardeskICS::API.fetch_json url

calendar = SeminardeskICS::Converter.to_icalendar json

out_stream << calendar.to_ical

# The exit grace
exit 0
